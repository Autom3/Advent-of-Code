const input = require('fs').readFileSync('input.txt', 'utf-8')

console.log((o => {o['..'][o['.']] = o; let x = o; while(x['.'] !== '/') {x = x['..']}; const f = y => Object.fromEntries(Object.entries(y).filter(([key]) => key !== '..' && key !== '.').map(([key, value]) => [key, typeof value === 'object' ? f(value) : Number(value)])); let total = 0; const g = y => {const sum = Object.values(y).reduce((acc, cur) => acc + (typeof cur === 'object' ? g(cur) : cur), 0); if (sum <= 100000) {total += sum}; return sum}; g(f(x)); return total})(input.split('\n').map(line => line.split(' ')).reduce((acc, cur) => {acc['..'][acc['.']] = acc; return cur[0] === '$' ? (cur[1] === 'cd' ? (cur[2] === '..' ? acc['..'] : Object.fromEntries([...Object.entries(acc[cur[2]]), ['.', cur[2]], ['..', acc]])) : acc) : Object.fromEntries([...Object.entries(acc), [cur[1], cur[0] === 'dir' ? {} : cur[0]]])}, (o => Object.fromEntries([...Object.entries(o), ['..', o]]))({'/': {}, '.': '/'}))))

console.log((o => {o['..'][o['.']] = o; let x = o; while(x['.'] !== '/') {x = x['..']}; const f = y => Object.fromEntries(Object.entries(y).filter(([key]) => key !== '..' && key !== '.').map(([key, value]) => [key, typeof value === 'object' ? f(value) : Number(value)])); const totals = []; const g = y => {const sum = Object.values(y).reduce((acc, cur) => acc + (typeof cur === 'object' ? g(cur) : cur), 0); totals.push(sum); return sum}; g(f(x)); return totals})(input.split('\n').map(line => line.split(' ')).reduce((acc, cur) => {acc['..'][acc['.']] = acc; return cur[0] === '$' ? (cur[1] === 'cd' ? (cur[2] === '..' ? acc['..'] : Object.fromEntries([...Object.entries(acc[cur[2]]), ['.', cur[2]], ['..', acc]])) : acc) : Object.fromEntries([...Object.entries(acc), [cur[1], cur[0] === 'dir' ? {} : cur[0]]])}, (o => Object.fromEntries([...Object.entries(o), ['..', o]]))({'/': {}, '.': '/'}))).sort((a, b) => a - b).find((value, _, arr) => 70000000 - arr[arr.length - 1] + value > 30000000))
